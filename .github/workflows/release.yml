name: Release

on:
  push:
    tags:
      - "v*.*.*" # triggers on version tags like v1.0.0

jobs:
  build:
    name: Build Binaries
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            ext: ""
          - os: macos-latest
            target: x86_64-apple-darwin
            ext: ""
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            ext: .exe

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build release binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Package binary
        shell: pwsh
        run: |
          $Target = "${{ matrix.target }}"
          $Ext = "${{ matrix.ext }}"
          $BinaryName = "supervisors$Ext"
          $OutZip = "supervisors-$Target.zip"
          $Dist = "dist"

          New-Item -ItemType Directory -Force -Path $Dist | Out-Null
          Copy-Item "target/$Target/release/$BinaryName" "$Dist/"

          if ($IsWindows) {
            Compress-Archive -Path "$Dist/$BinaryName" -DestinationPath "$Dist/$OutZip"
          } else {
            & zip "$Dist/$OutZip" "$Dist/$BinaryName"
          }

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: supervisors-${{ matrix.target }}
          path: dist/supervisors-${{ matrix.target }}.zip

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**/supervisors-*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
